[["index.html", "소개하기", " 소개하기 이 책은 한신대학교 응용통계학과 2022학년도 1학기 시계열분석의 교재로 사용되고 있다. "],["chapter-ts-plot.html", "Chapter 1 시계열 그래프 1.1 시계열 자료 1.2 시계열 그래프 작성", " Chapter 1 시계열 그래프 모든 통계자료 분석의 첫 번째 단계는 적절한 그래프를 작성하는 것이다. 자료의 전체 모습을 확인하는데 자료의 시각화 만큼 효과적인 방법도 없을 것이다. 시계열분석에서도 이 규칙은 예외 없이 적용된다고 할 수 있다. 그럼 시계열 자료는 어떤 특징을 갖고 있으며, 일반적인 통계 자료와 어떤 차이가 있는지 알아보도록 하자. 1.1 시계열 자료 동일한 대상을 시간의 흐름에 따라 계속해서 관측할 수 있는데, 이러한 과정에서 생성된 자료를 시계열자료라고 한다. 시계열자료에는 기온과 같이 연속적으로 생성은 되지만 일정한 간격을 두고 관측하는 연속 시계열 자료가 있고, 일일 전기 소비량과 같이 자료의 생성 및 관측에 일정한 간격이 있는 이산 시계열 자료가 있다. 이 책에서는 이산 시계열 자료를 대상으로 하는 분석 기법을 다루고자 한다. 일정한 간격을 두고 관측되는 시계열 자료의 관측 시점의 차이를 시차 (time lag)라고 한다. 1.1.1 종단 자료(cross-sectional data)와의 비교 시계열 자료는 여러 시점에 걸쳐서 동일 개체에 대하여 반복해서 관측된 자료를 의미한다. 반면에 종단 자료는 어느 특정 시점에서 여러 개체에 대해 관측된 자료를 의미한다. 두 형태의 자료에 대한 예로써 다음의 표를 살펴보자. 첫 번째 표는 특정 시점에 4개 기업에 대한 주가, 유동자산 및 부채를 조사한 모의 자료이다. 회귀분석 등으로 분석이 가능한 형태의 자료라고 할 수 있다. 종단자료 기업 주가 유동자산 부채 A 56,500 95 55 B 24,000 20 23 C 86,000 110 98 D 12,000 32 13 두 번째 표는 3월 2일부터 3월 5일까지 A 기업과 B 기업의 주가 자료라고 하자. 일일 간격으로 4일 동안 두 기업의 주가를 반복해서 관측한 자료이므로 시계열 자료에 해당한다. 시계열자료 일시 A 기업의 주가 B 기업의 주가 3.2 56,500 24,000 3.3 54,200 23,100 3.4 54,600 22,300 3.5 52,100 23,200 1.1.2 시계열 예측 통계적 추론을 위한 기본적인 가정은 자료가 서로 독립이고 동일한 분포를 갖고 있다는 것이다. 따라서 통계 자료가 서로 독립이 아니라면 통계적 예측 모형을 효과적으로 적용하기 어렵다고 할 수 있다. 앞 절에서 살펴본 종단자료는 거의 모든 경우에 행의 순서를 뒤섞어도 문제가 되지 않는 자료이기 때문에, 독립성에는 큰 문제가 없는 것이 일반적인 상황이다. 따라서 이러한 형태의 자료에 대해서는 무리 없이 선형회귀모형 등을 적합시켜 예측을 효과적으로 실시할 수 있다. 반면에 시계열자료의 경우에는 예컨대 3월 3일 주가는 3월 2일 주가와 독립이 될 수 없는 상황이다. 따라서 시계열자료에 대한 예측모형은 독립성을 가정하고 있는 일반적인 통계모형을 사용할 수 없는 것이다. 우리는 앞으로 시계열자료를 대상으로 효과적인 예측을 실시할 수 있는 다양한 모형을 살펴볼 것이다. 시계열 예측은 많은 분야에서 필수적인 사항이고, 따라서 전문가가 많이 필요한 분야라고 할 수 있다. 1.2 시계열 그래프 작성 시계열자료는 관측 결과 뿐 아니라 관측이 시작된 시점과 끝난 시점, 관측 간격으로 이루어져 있으며, 이러한 정보를 R에서는 ‘ts’ 객체에 저장할 수 있다. 예를 들어 AirPassengers는 미국 Pam Am 항공사의 1949년부터 1960년까지 월별 항공기 탑승 승객 수가 천 명 단위로 입력되어 있다. &gt; AirPassengers Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec 1949 112 118 132 129 121 135 148 148 136 119 104 118 1950 115 126 141 135 125 149 170 170 158 133 114 140 1951 145 150 178 163 172 178 199 199 184 162 146 166 1952 171 180 193 181 183 218 230 242 209 191 172 194 1953 196 196 236 235 229 243 264 272 237 211 180 201 1954 204 188 235 227 234 264 302 293 259 229 203 229 1955 242 233 267 269 270 315 364 347 312 274 237 278 1956 284 277 317 313 318 374 413 405 355 306 271 306 1957 315 301 356 348 355 422 465 467 404 347 305 336 1958 340 318 362 348 363 435 491 505 404 359 310 337 1959 360 342 406 396 420 472 548 559 463 407 362 405 1960 417 391 419 461 472 535 622 606 508 461 390 432 AirPassengers는 ts 객체이다. 출력된 형태는 2차원 구조로 보이지만, 벡터와 같은 1차원 배열이다. ts 객체의 특성은 다음과 같이 알아볼 수 있다. &gt; class(AirPassengers) [1] &quot;ts&quot; &gt; start(AirPassengers) [1] 1949 1 &gt; end(AirPassengers) [1] 1960 12 &gt; frequency(AirPassengers) [1] 12 AirPassengers의 시작 시점은 1949년 1월이고, 종료 시점은 1960년 12월이다. 함수 frequency()는 시계열자료의 주기, 즉 계절 요소의 반복 기간을 보여주고 있다. 1.2.1 ts 객체 생성 만일 일반 벡터를 ts 객체로 변환하려고 한다면, 함수 ts()를 사용해야 한다. 사용법은 ts(data, start, end, frequency)와 같은데, data는 시계열자료로 변환할 벡터이고 start는 자료의 시작점을 지정하는 것으로써, 2020년 1월을 시작점으로 지정한다면 start = c(2020, 1)과 같이 지정하면 된다. end는 자료의 종료 시점을 지정하는 것이며, 방법은 start와 동일하다. 만일 end를 생략한다면 data에 있는 모든 자료가 시계열자료로 변환된다. frequency는 자료의 주기를 지정하는 것으로써, 연간 자료는 1, 분기별 자료는 4, 월별 자료는 12를 지정하면 된다. 예제: 백화점 매출액 자료 depart.txt는 어떤 백화점의 1984년 1월부터 1988년 12월까지의 월별 매출액이 입력되어 있다. 이것을 R로 불러와서 ts 객체로 변환시켜보자. &gt; depart &lt;- scan(&quot;https://raw.githubusercontent.com/yjyjpark/TS-with-R/main/Data/depart.txt&quot;) &gt; depart.ts &lt;- ts(depart, start = c(1984, 1), frequency = 12) &gt; depart.ts Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec 1984 423 458 607 564 536 536 804 540 488 627 672 1447 1985 514 518 699 654 612 612 884 605 547 705 698 1555 1986 561 564 773 717 665 667 994 661 616 786 806 1754 1987 622 636 874 831 769 779 1142 764 718 930 943 2039 1988 736 752 1057 947 868 931 1311 896 867 1073 1069 2333 1.2.2 시계열 그래프 작성 시계열 그래프란 시계열자료를 관측된 순서대로 선으로 연결한 그래프를 의미한다. 작성 함수는 ggplot2::autoplot()인데, 이 함수는 입력되는 객체의 특성에 가장 적합한 그래프를 작성해 주는 함수로서 앞으로 매우 유용하게 사용된다. 함수 autoplot()으로 시계열 그래프를 작성하기 위해서는 패키지 forecast도 필요한데, 패키지 fpp2를 불러오면 필요한 패키지가 모두 같이 로딩된다. &gt; library(fpp2) Registered S3 method overwritten by &#39;quantmod&#39;: method from as.zoo.data.frame zoo -- Attaching packages ---------------------------------------------- fpp2 2.4 -- v ggplot2 3.3.5 v fma 2.4 v forecast 8.16 v expsmooth 2.3 예제: 백화점 매출액 자료 백화점 매출액 자료인 depart.ts의 시계열 그래프를 작성해 보자. &gt; autoplot(depart.ts) + + labs(title = &quot;Monthly sales of a department store&quot;, x = &quot;Year&quot;, y = NULL) Figure 1.1: 백화점 월별 매출액 예제: 지구 온도 자료 1856년 1월부터 2005년 12월까지 지구 온도 자료가 global.txt에 입력되어 있다. 이 자료의 시계열 그래프를 작성해 보자. &gt; global &lt;- scan(&quot;https://raw.githubusercontent.com/yjyjpark/TS-with-R/main/Data/global.txt&quot;) &gt; global.ts &lt;- ts(global, start = c(1856, 1), frequency = 12) &gt; autoplot(global.ts) + + labs(title = &quot;Global Temperature 1985 ~ 2005&quot;, x = &quot;Year&quot;, y = NULL) Figure 1.2: 1856년부터 2005년까지 지구 온도 시계열 그래프 Figure 1.2에서 볼 수 있는 것은 대략 1970년 이후로 지속적인 상승 패턴이 있다는 점이다. 1970년 이후 자료에 대한 시계열 그래프를 다시 작성해 보자. 이것을 위해서는 이미 생성된 ts 객체에서 일부분을 선택해야 하는데, 이 작업은 함수 window()로 할 수 있다. 사용법은 window(ts, start, end)이다. 이제 1970년 1월 이후 자료에 대한 시계열 그래프를 작성해 보자. &gt; global.1970 &lt;- window(global.ts, start = 1970) &gt; autoplot(global.1970) + + labs(title = &quot;Global Temperature 1970 ~ 2005&quot;, x = &quot;Year&quot;, y = NULL) Figure 1.3: 1970년부터 2005년까지 지구 온도 시계열 그래프 Figure 1.3의 시계열 그래프에 회귀직선을 추가하면, 상승 추세를 조금 더 명확하게 확인할 수 있다. &gt; autoplot(global.1970) + + geom_smooth(method = &quot;lm&quot;, se = FALSE) + + labs(title = &quot;Global Temperature 1970 ~ 2005&quot;, x = &quot;Year&quot;, y = NULL) Figure 1.4: 시계열 그래프에 회귀직선 추가 예제: 다중 시계열 그래프 cbe.txt에는 호주에서 1958년부터 초콜릿, 맥주 및 전기의 월별 생산량이 입력되어 있다. &gt; CBE &lt;- readr::read_table(&quot;https://raw.githubusercontent.com/yjyjpark/TS-with-R/main/Data/cbe.txt&quot;) &gt; CBE %&gt;% print(n = 3) # A tibble: 396 x 3 choc beer elec &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; 1 1451 96.3 1497 2 2037 84.4 1463 3 2477 91.2 1648 # ... with 393 more rows tibble로 입력된 자료를 ts 객체로 변환해 보자. 함수 ts()에 데이터 프레임을 입력하면 행렬로 변환되어 처리되는데, 열을 구성하는 벡터를 각각 ts 객체로 변환시킨다. &gt; cbe &lt;- ts(CBE, start = 1958, frequency = 12) &gt; head(CBE, n = 3) # A tibble: 3 x 3 choc beer elec &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; 1 1451 96.3 1497 2 2037 84.4 1463 3 2477 91.2 1648 cbe에는 시계열자료 choc, beer와 elec로 구성되어 있음을 알 수 있다. 이러한 다중 시계열 자료를 함수 autoplot()에 입력하면 다중 시계열 그래프가 작성된다. &gt; autoplot(cbe) + + ylab(NULL) Figure 1.5: 다중 시계열 그래프 만일 다중 시계열자료의 scale에 큰 차이가 있다면 하나의 그래프에 작성하는 것보다는 facet 그래프를 작성하는 것이 더 효과적이다. &gt; autoplot(cbe, facets = TRUE) + + ylab(NULL) Figure 1.6: 다중 시계열 그래프 1.2.3 Seasonal 그래프 시계열자료에 계절 변동 요소가 있는 경우에, 그 특성을 명확하게 나타낼 그래프가 있다면 많은 도움이 될 것이다. 계절 요소가 있는 시계열자료에 대해서 1.2.2절에서 살펴본 그래프를 작성해도 어느 정도 계절 요소를 확인할 수 있는 것은 사실이지만, 계절 요소만을 정밀하게 확인하기는 어려움이 있다고 하겠다. 이 절에서 살펴볼 seasonal 그래프는 기본적으로 시계열자료를 측정된 주기 (월 또는 분기)별로 나타낸 그래프이다. 이러한 그래프를 작성하면 계절 변동의 패턴을 쉽게 확인 할 수 있으며, 또한 전체 측정 기간 동안 계절 패턴에 어떤 변화가 있었는지, 변화가 있었던 시점 등을 쉽게 확인할 수 있게 된다. 살펴볼 그래프는 forecast::ggseasonplot()과 forecast::ggsubseriesplot()으로 작성되는 그래프와 분기별 나란히 서 있는 상자그림이다. 예제: AirPassengers 우선 함수 ggseasonplot()으로 그래프를 작성해 보자. &gt; ggseasonplot(AirPassengers) Figure 1.7: 함수 ggseasonalplot()으로 작성된 seasonal 그래프 X축 변수는 이 자료의 주기인 월이고, 각 연도는 색으로 구분되어 있다. 각 연도에 적용된 색은 그래프 오른쪽에 범례로 정리되어 있다. 연도에 대한 범례를 그래프 안에 일종의 라벨로 표시하고자 한다면 옵션 year.labels = TRUE를 포함시키면 된다. &gt; ggseasonplot(AirPassengers, year.labels = TRUE) Figure 1.8: 함수 ggseasonalplot()으로 작성된 seasonal 그래프 연도에 대한 라벨을 왼쪽에도 함께 나타낼 필요가 있다면 옵션 year.labels.left = TRUE를 포함시키면 된다. &gt; ggseasonplot(AirPassengers, year.labels = TRUE, year.labels.left = TRUE) Figure 1.9: 함수 ggseasonalplot()으로 작성된 seasonal 그래프 극좌표 형태롤 나타내고자 한다면, 옵션 polar = TRUE를 포함시키면 된다. &gt; ggseasonplot(AirPassengers, polar = TRUE) Figure 1.10: 함수 ggseasonalplot()으로 작성된 seasonal 그래프 이번에는 함수 ggsubseriesplot()으로 그래프를 작성해 보자. 월별로 자료를 구분해서 선 그래프를 작성하고, 파란 선으로 월별 평균을 표시한 그래프이다. &gt; ggsubseriesplot(AirPassengers) Figure 1.11: 함수 ggsubseriesplot()으로 작성된 seasonal 그래프 월별로 구분된 자료를 대상으로 상자그림을 작성해서 보는 것도 의미있는 분석이 될 수 있을 것이다. 상자그림을 작성하기 위해서는 ts 객체인 AirPassengers를 숫자형 벡터로 변환시키고, 각 자료를 주기를 함수 cycle()로 추출해서 요인으로 변환시키는 것이 필요하다. &gt; tibble::tibble(AP = as.numeric(AirPassengers), mon = as.factor(cycle(AirPassengers))) %&gt;% + ggplot(aes(x = mon, y = AP)) + + geom_boxplot() + + labs(x = &quot;Month&quot;, y = &quot;Air Passengers&quot;) Figure 1.12: 상자그림으로 나타낸 계절 변동 요소 "],["시계열-분해.html", "Chapter 2 시계열 분해 2.1 시계열 분해 모형 2.2 전통적 시계열 분해 기법 2.3 STL 분해 기법", " Chapter 2 시계열 분해 1장에서 우리는 시계열 그래프의 작성 방법을 알아봤다. 시계열 그래프는 시계열자료가 갖고 있는 특성에 따라 매우 다양한 형태를 취하고 있음을 알 수 있는데, 이러한 특성을 명확하게 파악하기 위해서 시계열자료를 몇 가지 성분으로 분해하는 것이 도움이 될 수 있다. 예를 들어 Figure 1.1에서 우리는 월별 매출액이 지속적으로 상승하는 패턴이 있는 것을 볼 수 있는데, 이러한 패턴을 추세 성분이라고 한다. 또한 일년을 주기로 동일한 패턴이 반복되는 것도 볼 수 있는데, 이러한 패턴을 계절 성분이라고 한다. 일반적으로 시계열자료은 다음의 네 가지 성분으로 분해해서 살펴보게 된다. 추세 성분 : 시간이 흐름에 따라 지속적으로 증가하거나 감소하는 형태의 변동을 의미한다. Figure 1.1와 Figure 1.3에서 상승하는 패턴을 볼 수 있다. 계절 성분 : 계절 요인에 의한 주기적 변동을 의미한다. 계절 요인이란 말 그대로 1년 단위로 반복되는 계절 또는 1주 단위로 반복되는 요일 등이 되는 것이며, 계절 성분의 경우에는 반드시 고정된 주기가 존재하게 된다. Figure 1.1에서 1년을 주기로 동일한 패턴이 반복되는 것을 볼 수 있다. 순환 성분 : 계절 성분과 비슷한 주기적 변동을 의미하지만, 고정되거나 알려진 주기가 있는 것은 아니며, 계절 성분보다 휠씬 긴 주기를 갖고 있다. 불규칙 성분 : 추세, 계절 및 순환 성분으로 분류되지 않는 변동을 의미한다. 2.1 시계열 분해 모형 추세, 계절, 순환 및 불규칙 성분이 어떻게 시계열자료를 구성하고 있는지를 나타내는 두 가지 모형이 있다. 첫 번째는 4가지 성분이 서로 더해진 상태를 나타내는 가법 모형이고, 두 번째는 4가지 성분이 서로 곱해진 상태를 나타내는 승법 모형이 있다. 가법 모형은 다음과 같이 나타낼 수 있다. \\[\\begin{equation} Y_{t} = T_{t} + S_{t} + C_{t} + I_{t} \\end{equation}\\] \\(Y_{t}\\)는 \\(t\\) 시점에서의 시계열자료이고, \\(T_{t}\\)는 추세 성분, \\(S_{t}\\)는 계절 성분, \\(C_{t}\\)는 순환 성분, 그리고 \\(I_{t}\\)는 불규칙 성분을 나타낸다. 승법 모형은 다음과 같이 표현된다. \\[\\begin{equation} Y_{t} = T_{t} \\times S_{t} \\times C_{t} \\times I_{t} \\end{equation}\\] 각 성분이 시계열자료에 어떤 영향을 줄 수 있는지 몇 가지 예제 자료에 대한 시계열 그래프를 작성해서 살펴보자. 먼저 불규칙 성분만이 있는 경우이다. 불규칙 성분은 어떠한 체계적인 요소가 없는, 단순히 우연적인 요소만이 남아 있는 상태를 의미한다. Figure 2.1: 불규칙 성분만이 있는 시계열자료 추세와 불규칙 성분이 있는 시계열자료의 그래프는 다음과 같다. 지속적인 상승 추세가 있는 그래프이다. 상승 추세의 기울기가 점점 증가하고 있음도 알 수 있다. Figure 2.2: 추세와 불규칙 성분이 있는 시계열 자료 이번에는 계절 성분과 불규칙 성분이 있는 시계열자료의 그래프를 살펴보자. 특별히 증가하거나 감소하는 추세는 없지만 매년 거의 동일한 패턴이 반복되고 있는 것을 알 수 있다. Figure 2.3: 계절 성분과 불규칙 성분이 있는 시계열 자료 추세와 계절 성분, 그리고 불규칙 성분이 가법 모형의 형태로 있는 경우에 대한 그래프를 살펴보자. 상승 추세가 있으며, 매년 반복되는 패턴인 계절 성분이 함께 있는 경우이다. 가법 모형에서는 계절 성분이 추세 성분에 더해진 것을 가정하고 있기 때문에 계절 성분에 의한 변동 폭이 시간의 흐름에 관계 없이 일정하다는 것을 볼 수 있다. Figure 2.4: 가법 모형의 시계열 자료 승법 모형에서는 계절 성분이 추세 성분에 곱해진 것을 가정하고 있기 때문에, 만일 상승 추세라면 시간이 흐를수록 변동 폭이 증가하는 현상이 나타날 것이다. Figure 2.5: 승법 모형의 시계열 자료 승법 모형인 \\(Y_{t} = T_{t} \\times S_{t} \\times I_{t}\\)의 양변에 로그를 취하면 가법 모형의 형태인 \\(\\log Y_{t} = \\log T_{t} + \\log S_{t} + \\log I_{t}\\)로 변형되는 것을 알 수 있는데, 따라서 Figure 2.5의 자료에 로그 변환을 취하면 변동 폭이 일정하게 변환되는 모습을 보이게 된다. Figure 2.6: 로그 변환으로 변동 폭이 일정해진 시계열 자료 순환 성분 순환 성분은 계절 성분처럼 주기적인 변화이지만, 그 변화가 계절에 의한 것이 아니며, 주기도 계절 성분보다 훨씬 긴 변동이다. 또한 주기가 정확하게 주어지지 않은 경우가 대부분이고, 따라서 주기의 예측이 필요한 성분이라 하겠다. 뚜렷한 순환성분이 있는 시계열자료의 그래프를 살펴보자. 첫 번째 그래프는 1749년부터 1983년까지 월별 태양 흑점 수 자료에 대한 시계열 그래프이다. 여러 개의 주기가 함께 있다는 것을 알 수 있으며, 정확한 주기 예측이 매우 어려워 보이는 자료이다. Figure 2.7: 월별 태양 흑점 수: 1749 ~ 1983 두 번째 그래프는 1973년 1월부터 1995년 11월까지 미국에서 거래된 1인 가구 주택 월별 매매 건수이다. 1년 단위의 고정된 주기로 비슷한 패턴이 반복되고 있는 것을 볼 수 있는데, 이것은 계절 성분에 의한 변동이다. 또한 일정하지 않은 긴 주기로 비슷한 등락 패턴이 반복되고 있는 것을 볼 수 있는데, 이것이 순환 성분에 의한 변동이라고 할 수 있다. 하지만 이 변동을 등락이 반복되고 있는 추세 성분으로 이해한다면 굳이 주기를 예측할 필요 없이 조금 더 편하게 분석을 할 수 있을 것이다. Figure 2.8: 1인 가구 주택 매매 건수 순환 성분의 주기를 예측하는 것은 이 책의 수준을 넘어서는 상당히 어려운 작업이라 할 수 있다. 따라서 순환 성분을 개별적으로 분류해서 추정하지 않고, 추세 성분과 합쳐서 하나의 성분으로 보는 것이 좋을 것으로 보인다. 이러한 접근 방식은 일반적으로 많이 이루어지는 분석 방식이라고 할 수 있으며, 앞으로 이 책에서는 추세 성분에 순환 성분이 포함되어 있다고 가정하겠다. 이런 이유로 해서 가법 모형은 \\(Y_{t} = T_{t} + S_{t} + I_{t}\\)으로, 승법 모형은 \\(Y_{t} = T_{t} \\times S_{t} \\times I_{t}\\)으로 표현을 하겠다. 2.2 전통적 시계열 분해 기법 1920년대에 개발된 기법으로써 이동평균법을 활용한 방법이다. 비교적 단순한 방법이어서 최근에는 많이 사용되고 있지는 않지만, 다른 많은 기법의 기초가 되고 있다. 먼저 이동평균법에 대하여 알아보도록 하자. 2.2.1 이동 평균법 이동평균법은 시계열자료에서 추세 성분을 추정하기 위해 개발된 기법이다. 기본적인 방법은 시점 \\(t\\)에서의 추세 성분을 \\(t \\pm k\\) 시차에 있는 자료의 평균 값으로 추정하는 것이다. 비슷한 시점에 관측된 시계열자료는 그 값들이 크게 차이나지 않을 것으로 예상할 수 있는데, 이렇게 유사한 자료의 평균을 계산하면, 개별 자료에 포함된 약간의 불규칙 성분이 제거되는 효과를 볼 수 있다. 따라서 이동평균법으로 비교적 매끄러운 추세 성분을 추정할 수 있을 것이다. \\(m\\)차 이동평균법 또는 \\(m\\)-MA는 다음과 같이 표현된다. \\[\\begin{equation} \\hat{T}_{t} = \\frac{1}{n} \\sum_{i = -k}^{k} Y_{t+i} \\end{equation}\\] 단, \\(m=2k+1\\)이다. 따라서 이 표현식은 차수 \\(m\\)이 홀수인 \\(m\\)-MA에만 적용된다고 하겠다. 예를 들어 1989년부터 2008년까지 호주 남부 지역의 연간 전기 사용량 자료인 fpp2::elecsales에 5-MA를 적용해서 결과를 산출해 보자. Year Sales 5-MA 1989 2354.34 NA 1990 2379.71 NA 1991 2318.52 2381.530 1992 2468.99 2424.556 1993 2386.09 2463.758 1994 2569.47 2552.598 1995 2575.72 2627.700 1996 2762.72 2750.622 1997 2844.50 2858.348 1998 3000.70 3014.704 1999 3108.10 3077.300 2000 3357.50 3144.520 2001 3075.70 3188.700 2002 3180.60 3202.320 2003 3221.60 3216.940 2004 3176.20 3307.296 2005 3430.60 3398.754 2006 3527.48 3485.434 2007 3637.89 NA 2008 3655.00 NA 5차 이동평균법이 적용된 결과가 세 번째 열에 나타나 있다. \\(m=5\\)이므로 \\(k=2\\)가 되며, 처음과 마지막 \\(k\\)개 자료는 NA가 됨을 알 수 있다. 흔히 적용되는 홀수차 이동평균법의 예제로는 코로나 19 일일 감염 환자 수를 생각할 수 있다. 이 자료에 \\(m = 7\\)의 이동평균법을 적용하면, 주간 계절 성분(weekly seasonality)이 제거된 추세 성분을 추정할 수 있게 된다. 계절 주기가 짝수인 월별 자료나 분기별 자료에 이동평균법을 적용시킨다면 차수 \\(m\\)을 짝수로 지정해야 할 것이다. 즉, 월별 자료에는 \\(m=12\\), 분기별 자료에는 \\(m=4\\)를 적용해야 하는데, 짝수 차수 이동평균법의 문제는 평균 계산에 사용되는 자료가 시점 \\(t\\)를 중심으로 좌우 대칭이 될 수 없다는 점이다. 좌우 비대칭 문제를 해결하는 방법은 짝수 차수 이동평균법의 결과에 다시 2차 이동평균법을 적용시키는 것이다. 따라서 \\(m\\)이 짝수인 경우에는 \\(m\\)-MA가 아닌 \\(2 \\times m\\)-MA를 사용하는 것이다. 이동평균법을 계산하는 함수는 forecast::ma()이고, 사용법은 ma(x, order, centre = TRUE)이다. x는 시계열자료이고, order는 이동평균의 차수, 그리고 centre는 order가 짝수인 경우에 ‘centered MA,’ 즉 \\(2 \\times m\\)-MA의 적용 여부이며, TRUE가 디폴트이다. 차수 \\(m\\)의 효과 이동평균법의 차수를 증가시키면, 더 많은 자료를 이용해서 평균값을 계산하게 되고, 따라서 더 매끄러운 추세 곡선을 얻게 된다. elecsales에 \\(m\\)-MA를 적용시켜 얻은 결과를 원자료와 함께 그래프로 나타내 보자. 우선 3-MA의 결과를 나타내 보자. &gt; autoplot(elecsales, series = &quot;Data&quot;) + + autolayer(ma(elecsales, 3), series = &quot;3-MA&quot;) + + scale_color_manual(values = c(&quot;Data&quot; = &quot;blue&quot;, &quot;3-MA&quot; = &quot;red&quot;)) + + labs(title = &quot;3-MA&quot;, color = NULL, y = NULL) Figure 2.9: elecsales에 3-MA를 적용한 결과 3-MA의 결과는 원자료보다 매끄로운 형태를 보이고 있음을 알 수 있다. 이제 차수 \\(m\\)을 증가시키면 어떤 결과를 얻게 되는지 살펴보자. Figure 2.10: elecsales 자료에 대한 차수 m의 효과 이번에는 호주에서 1956년부터 2010년까지 분기별 맥주 생산량 자료인 ausbeer에 대하여 \\(2 \\times m\\)-MA를 적용한 결과를 원자료와 함께 그래프로 나타내 보자. Figure 2.11: ausbeer 자료에 대한 차수 m의 효과 2.2.2 전통적 분해 기법 전통적 분해 기법은 가법 모형과 승법 모형 모두에 대해 적용이 가능한 기법이다. 추세 성분은 이동평균법으로 추정을 하고, 계절 성분은 전체 구간 동안 일정하다고 가정하고 있다. 가법 모형\\((Y_{t} = T_{t} + S_{t} + I_{t})\\)에 적용되는 분해 방법은 다음과 같다. 추세 성분: 차수가 홀수이면 \\(m\\)-MA를 적용하고, 짝수이면 \\(2 \\times m\\)-MA를 적용하여 \\(\\hat{T}_{t}\\)를 계산한다. 계절 성분: 추정된 추세 성분이 제거된 자료\\(( Y_{t} - \\hat{T}_{t})\\)를 대상으로 계절 요소별 평균값으로 \\(\\hat{S}_{t}\\)를 계산한다. 월별 자료인 경우, 1월에 대한 계절 성분의 추정 값은 추세 성분이 제거된 자료의 모든 1월 자료의 평균 값이 된다. \\(\\hat{S}_{t}\\)는 합은 0이 되도록 조정한다. 불규칙 성분: 시계열자료에서 추세 및 계절 성분의 추정 값을 빼서 계산한다. 즉, \\(\\hat{I}_{t} = Y_{t} - \\hat{T}_{t} - \\hat{S}_{t}\\)가 된다. 승법 모형에 대한 분해는 가법 모형에서와 동일하다. 다만, 추정된 성분을 제거할 때 뺄셈이 아닌 나눗셈을 사용하면 된다. 전통적 분해 기법이 많이 사용되지 않는 이유 중 하나는 이동평균법의 특성으로 인하여 처음과 마지막 \\(k\\)개 시점에 대한 추세 성분을 추정할 수 없다는 것이다. 또한 계절 성분이 항상 일정하다는 가정이 전체 기간이 짧은 단기 시계열의 경우에는 문제가 없겠지만, 장기 시계열자료에 대해서는 적용하기 어려운 가정일 수 있기 때문이다. 전통적 분해 기법은 함수 decompose()로 할 수 있으며, 사용법은 decompose(x, type = c(\"additive\", \"multiplicative\"))이다. x는 시계열자료이고, type은 가법모형과 승법모형을 지정하는 것이며, 디폴트는 가법 모형이다. 예를 들어 월별 자료인 fpp2::elecequip을 대상으로 전통적 분해 기법을 적용해 보자. 함수 decompose()의 결과를 함수 autoplot()에 입력시키면 분해된 각 성분을 그래프로 나타낸다. &gt; decompose(elecequip) %&gt;% + autoplot() Figure 2.12: elecequip 자료에 대한 전통적 분해 기법 적용 결과 각 패널의 오른쪽 끝에 높이가 동일한 막대를 배치하여, 각 성분의 상대적 크기를 쉽게 확인할 수 있게 하였다. 불규칙 성분이 표시된 마지막 패널의 막대가 가장 크다는 것은 불규칙 성분의 크기가 가장 작다는 의미가 된다. 또한 추세 성분의 처음과 마지막 6개월 자료는 NA가 되기 때문에 해당 기간에는 결과가 표시 되지 않았음을 알 수 있으고, 계절 성분이 동일한 형태를 취하고 있음도 확인할 수 있다. 2.3 STL 분해 기법 STL은 “Seasonal and Trend decomposition using Loess”를 줄인 것이며, loess는 “local regression”을 의미한다. Local regression이란 비모수 회귀모형으로 분류되는 분석 방법으로써 변수들 사이에 존재하는 관계를 추정하는 기법이다. 선형회귀모형에서는 두 변수 사이에 선형 관계 (\\(Y = \\beta_{0} + \\beta_{1} X + \\epsilon\\))가 있다고 가정하고 전체 자료를 모두 사용하여 모수 \\(\\beta_{0}\\)와 \\(\\beta_{1}\\)을 추정함으로써, 두 변수의 관계를 설명하는데 반하여, 비모수 회귀모형에서는 두 변수 사이에 어떤 관계도 가정하지 않고, \\((t-\\delta, t+\\delta)\\)에 속한 자료만을 대상으로 일종의 가중 회귀모형으로 \\(t\\) 시점에서 두 변수 사이의 관계를 추정하고 있다. 다양한 비모수 회귀모형 중에서 local regression은 매우 좋은 특성을 보이는 방법으로 알려져 있다. STL 분해 기법은 함수 stl()로 할 수 있으며, 기본 사용법은 stl(x, s.window, t.window, robust = FALSE)이다. x는 시계열자료이고, s.window는 계절 성분을 추정하기 위한 loess 구간을 설정하는 것이며, t.window는 추세 성분을 추정하기 위한 loess 구간을 설정하는 것이다. s.window에는 디폴트 값이 지정되어 있지 않기 때문에 \"periodic\" 또는 홀수 중 하나를 반드시 지정해야 한다. \"periodic\"을 지정하면 매년 동일한 계절 성분이 추정되며, 작은 값의 홀수를 지정할수록 추정된 계절 성분에 큰 변동이 발생하게 된다. t.window에는 홀수를 지정하거나, s.window에 지정된 값으로 계산되는 디폴트 값을 사용할 수 있다. robust는 이상값에 영향을 덜 받는 방법의 적용 여부를 선택하는 것이며, FALSE가 디폴트이다. 월별 자료인 fpp2::elecequip을 대상으로 STL 분해 기법을 적용해 보자. 함수 stl()의 결과를 함수 autoplot()에 입력하면 분해된 각 성분이 그래프로 나타난다. 먼저 s.window의 값이 계절 성분의 추정 결과에 미치는 효과를 살펴보자. &gt; library(patchwork) &gt; p1 &lt;- stl(elecequip, s.window = &quot;periodic&quot;) %&gt;% + autoplot() + labs(title = &quot;s.window = &#39;periodic&#39;&quot;) &gt; p2 &lt;- stl(elecequip, s.window = 5) %&gt;% + autoplot() + labs(title = &quot;s.window = 5&quot;) &gt; p1 + p2 Figure 2.13: elecequip 자료에 대한 STL 분해 기법 적용 결과: s.window의 효과 이번에는 t.window의 값이 추세 성분 추정에 미치는 영향을 살펴보자. 작은 값을 지정할수록 추세 성분에 더 큰 변동이 있게 된다는 것을 알 수 있다. &gt; library(patchwork) &gt; p3 &lt;- stl(elecequip, s.window = &quot;periodic&quot;, t.window = 7) %&gt;% + autoplot() + labs(title = &quot;t.window = 7&quot;) &gt; p4 &lt;- stl(elecequip, s.window = &quot;periodic&quot;, t.window = 11) %&gt;% + autoplot() + labs(title = &quot;t.window = 11&quot;) &gt; p3 + p4 Figure 2.14: elecequip 자료에 대한 STL 분해 기법 적용 결과: t.window의 효과 "],["지수-평활법.html", "Chapter 3 지수 평활법", " Chapter 3 지수 평활법 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
