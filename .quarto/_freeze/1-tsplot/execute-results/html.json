{
  "hash": "25f970041f5aef7dc6128a090759c8b8",
  "result": {
    "engine": "knitr",
    "markdown": "\n# 시계열 그래프 {#sec-tsplot}\n\n\n::: {.cell}\n\n:::\n\n\n\n## `ts` 객체 생성 {-}\n\n* 예제: 백화점 매출액 자료\n\n`depart.txt`는 어떤 백화점의 1984년 1월부터 1988년 12월까지의 월별 매출액이 입력되어 있다.\n함수 `scan()`을 사용하여 자료를 R로 불러오자. \n함수 `scan()`은 한 변수로 이루어진 텍스트 파일을 R로 불러올 때 사용할 수 있는 함수이다. \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndepart <- scan(\"https://raw.githubusercontent.com/yjyjpark/TS-with-R/main/Data/depart.txt\")\n```\n:::\n\n\n이제 벡터 `depart`를 함수 `ts()`를 사용하여 `ts` 객체로 변환시켜보자.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndepart.ts <- ts(depart, start = c(1984, 1), frequency = 12)\ndepart.ts\n##       Jan  Feb  Mar  Apr  May  Jun  Jul  Aug  Sep  Oct  Nov  Dec\n## 1984  423  458  607  564  536  536  804  540  488  627  672 1447\n## 1985  514  518  699  654  612  612  884  605  547  705  698 1555\n## 1986  561  564  773  717  665  667  994  661  616  786  806 1754\n## 1987  622  636  874  831  769  779 1142  764  718  930  943 2039\n## 1988  736  752 1057  947  868  931 1311  896  867 1073 1069 2333\n```\n:::\n\n\n\n## 시계열 그래프 작성 {-}\n\n\n* 예제: 백화점 매출액 자료\n\n백화점 매출액 자료인 `depart.ts`의 시계열 그래프를 @fig-depart 에 작성해 보자. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(fpp2)\nautoplot(depart.ts) +\n  labs(title = \"Monthly sales of a department store\", \n       x = \"Year\", y = NULL)\n```\n\n::: {.cell-output-display}\n![백화점 월별 매출액](1-tsplot_files/figure-html/fig-depart-1.png){#fig-depart width=672}\n:::\n:::\n\n\n* 예제: 지구 온도 자료\n\n1856년 1월부터 2005년 12월까지 지구 온도 자료가 `global.txt`에 입력되어 있다. \n이 자료의 시계열 그래프를 @fig-global 에 작성해 보자. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal <- scan(\"https://raw.githubusercontent.com/yjyjpark/TS-with-R/main/Data/global.txt\")\nglobal.ts <- ts(global, start = c(1856, 1), frequency = 12)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nautoplot(global.ts) +\n  labs(title = \"Global Temperature 1985 ~ 2005\", \n       x = \"Year\", y = NULL)\n```\n\n::: {.cell-output-display}\n![1856년부터 2005년까지 지구 온도 시계열 그래프](1-tsplot_files/figure-html/fig-global-1.png){#fig-global width=672}\n:::\n:::\n\n\n@fig-global 에서 볼 수 있는 것은 대략 1970년 이후로 지속적인 상승 패턴이 있다는 점이다. \n1970년 이후 자료에 대한 시계열 그래프를 다시 작성해 보자. \n이것을 위해서는 이미 생성된 `ts` 객체에서 일부분을 선택해야 하는데, 이 작업은 함수 `window()`로 할 수 있다. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal.1970 <- window(global.ts, start = 1970)\n```\n:::\n\n\n이제 1970년 1월 이후 자료에 대한 시계열 그래프를 @fig-global-1970 에 작성해 보자. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nautoplot(global.1970) +\n  labs(title = \"Global Temperature 1970 ~ 2005\", \n       x = \"Year\", y = NULL)\n```\n\n::: {.cell-output-display}\n![1970년부터 2005년까지 지구 온도 시계열 그래프](1-tsplot_files/figure-html/fig-global-1970-1.png){#fig-global-1970 width=672}\n:::\n:::\n\n\n@fig-global-1970 의 시계열 그래프에 회귀직선을 추가하면, 상승 추세를 조금 더 명확하게 확인할 수 있다. \n회귀직선을 추가한 그래프를 @fig-global-1970-lm 에 작성해 보자.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nautoplot(global.1970) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  labs(title = \"Global Temperature 1970 ~ 2005\", \n       x = \"Year\", y = NULL)\n```\n\n::: {.cell-output-display}\n![시계열 그래프에 회귀직선 추가](1-tsplot_files/figure-html/fig-global-1970-lm-1.png){#fig-global-1970-lm width=672}\n:::\n:::\n\n\n\n* 예제: 다중 시계열 그래프\\index{다중 시계열 그래프}\n\n`cbe.txt`에는 호주에서 1958년부터 생산된 초콜릿, 맥주 및 전기의 월별 생산량이 입력되어 있다. \n파일은 행과 열의 구조를 갖고 있으며, 각 자료는 빈 칸으로 구분되어 있다. \n이런 구조의 텍스트 파일을 불러오기 위해서 패키지 `readr`의 함수 `read_table()`을 사용하였다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nCBE <- read_table(\"https://raw.githubusercontent.com/yjyjpark/TS-with-R/main/Data/cbe.txt\")\nCBE %>% print(n = 3)\n## # A tibble: 396 × 3\n##    choc  beer  elec\n##   <dbl> <dbl> <dbl>\n## 1  1451  96.3  1497\n## 2  2037  84.4  1463\n## 3  2477  91.2  1648\n## # ℹ 393 more rows\n```\n:::\n\n\ntibble로 입력된 자료를 `ts` 객체로 변환해 보자. \n함수 `ts()`에 데이터 프레임을 입력하면 열을 구성하는 벡터를 각각 개별 `ts` 객체로 변환시킨다.   \n\n\n::: {.cell}\n\n```{.r .cell-code}\ncbe <- ts(CBE, start = 1958, frequency = 12)\nhead(CBE, n = 3)\n## # A tibble: 3 × 3\n##    choc  beer  elec\n##   <dbl> <dbl> <dbl>\n## 1  1451  96.3  1497\n## 2  2037  84.4  1463\n## 3  2477  91.2  1648\n```\n:::\n\n\n`cbe`에는 시계열자료 `choc`, `beer`와 `elec`로 구성되어 있음을 알 수 있다. \n이러한 다중 시계열 자료를 함수 `autoplot()`에 입력한 다중 시계열 그래프를 @fig-cbe-1 에 작성해 보자.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nautoplot(cbe) + ylab(NULL)\n```\n\n::: {.cell-output-display}\n![다중 시계열 그래프](1-tsplot_files/figure-html/fig-cbe-1-1.png){#fig-cbe-1 width=672}\n:::\n:::\n\n\n만일 다중 시계열자료의 scale에 큰 차이가 있다면 하나의 그래프에 작성하는 것보다는 facet 그래프를 작성하는 것이 더 효과적이다. Facet 다중 시계열 그래프를 @fig-cbe-2 에 작성해 보자. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nautoplot(cbe, facets = TRUE) + ylab(NULL)\n```\n\n::: {.cell-output-display}\n![다중 시계열 그래프](1-tsplot_files/figure-html/fig-cbe-2-1.png){#fig-cbe-2 width=672}\n:::\n:::\n\n\n\n## Seasonal 그래프 작성{-}\n\n* 예제: `AirPassengers`\n\n우선 함수 `ggseasonplot()`에 의한 seasonal 그래프를 @fig-season-AP-1 에 작성해 보자.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggseasonplot(AirPassengers)\n```\n\n::: {.cell-output-display}\n![함수 `ggseasonalplot()`으로 작성된 seasonal 그래프](1-tsplot_files/figure-html/fig-season-AP-1-1.png){#fig-season-AP-1 width=672}\n:::\n:::\n\n\n연도 범례를 포함시킨 seasonal 그래프를 @fig-season-AP-2 에 작성해 보자. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggseasonplot(AirPassengers, year.labels = TRUE)\n```\n\n::: {.cell-output-display}\n![함수 `ggseasonalplot()`으로 작성된 seasonal 그래프](1-tsplot_files/figure-html/fig-season-AP-2-1.png){#fig-season-AP-2 width=672}\n:::\n:::\n\n\n그래프 양쪽에 연도 범례를 포함시킨 seasonal 그래프를 @fig-season-AP-3 에 작성해 보자. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggseasonplot(AirPassengers, \n             year.labels = TRUE, year.labels.left = TRUE)\n```\n\n::: {.cell-output-display}\n![함수 `ggseasonalplot()`에서 `year.labels.left = TRUE`를 포함시킨 seasonal 그래프](1-tsplot_files/figure-html/fig-season-AP-3-1.png){#fig-season-AP-3 width=672}\n:::\n:::\n\n\n극좌표 형태의 seasonal 그래프를 @fig-season-AP-4 에 작성해 보자. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggseasonplot(AirPassengers, polar = TRUE)\n```\n\n::: {.cell-output-display}\n![함수 `ggseasonalplot()`에서 `polar = TRUE`를 포함시킨 seasonal 그래프](1-tsplot_files/figure-html/fig-season-AP-4-1.png){#fig-season-AP-4 width=672}\n:::\n:::\n\n\n이번에는 함수 `ggsubseriesplot()`으로 그래프를  @fig-season-AP-5 에 작성해 보자. \n월별로 자료를 구분해서 선 그래프를 작성하고, 파란 선으로 월별 평균을 표시한 그래프이다. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggsubseriesplot(AirPassengers)\n```\n\n::: {.cell-output-display}\n![함수 `ggsubseriesplot()`으로 작성된 seasonal 그래프](1-tsplot_files/figure-html/fig-season-AP-5-1.png){#fig-season-AP-5 width=672}\n:::\n:::\n\n\n월별로 구분된 자료를 대상으로 상자그림을 작성해서 보는 것도 의미있는 분석이 될 수 있을 것이다. \n상자그림을 작성하기 위해서는 `ts` 객체인 `AirPassengers`를 숫자형 벡터로 변환시키고,\n각 자료의 주기를 함수 `cycle()`로 추출해서 요인으로 변환시키는 것이 필요하다. \n상자그림으로 계절 요소의 변동을 @fig-season-AP-6 에 작성해 보자. \n\n\n::: {.cell}\n\n```{.r .cell-code}\ntibble(AP = as.numeric(AirPassengers), \n       mon = as.factor(cycle(AirPassengers))) %>% \n  ggplot(aes(x = mon, y = AP)) +\n  geom_boxplot() +\n  labs(x = \"Month\", y = \"Air Passengers\")\n```\n\n::: {.cell-output-display}\n![상자그림으로 나타낸 계절 변동 요소](1-tsplot_files/figure-html/fig-season-AP-6-1.png){#fig-season-AP-6 width=672}\n:::\n:::\n\n\n\n## 연습문제 {-}\n\n**1.** 백화점 매출액 자료 `depart.txt`에 대한 다음의 seasonal 그래프를 각각 작성하고, 계절 변동의 패턴에 대해 설명해 보자. \n\n\n::: {.cell layout-ncol=\"2\"}\n::: {.cell-output-display}\n![](1-tsplot_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](1-tsplot_files/figure-html/unnamed-chunk-20-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](1-tsplot_files/figure-html/unnamed-chunk-20-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](1-tsplot_files/figure-html/unnamed-chunk-20-4.png){width=672}\n:::\n:::\n\n\n\n**2.** 1981년 1월부터 1992년 12월까지 국내에 입국한 월별 관광객 수가 입력되어 있는 `Ktour.txt`에 대하여 다음의 작업을 진행해 보자. \n자료는 웹 서버 `https://raw.githubusercontent.com/yjyjpark/TS-with-R/main/Data/` 에서 불러올 수 있다.\n\n- ts 객체로 변환\n\n- 시계열 그래프 작성\n\n- seasonal 그래프 작성\n\n\n\n\n\n\n\n",
    "supporting": [
      "1-tsplot_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}